<Window x:Class="FrontendWPF.ManageProductsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FrontendWPF"
        xmlns:localComponents="clr-namespace:FrontendWPF.Components"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        Title="Manage products Window" Height="500" MinHeight="300" Width="800" MinWidth="600"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Topmost="True"
        MouseDown="Window_MouseDown"
        Closing="Window_Closing"
        x:Name="window"
        KeyDown="Window_KeyDown"
        DataContext="{Binding RelativeSource={RelativeSource Self}}" 
        >

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/ButtonThemeModern.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard Name="WindowFadeIn">
                    <DoubleAnimation Name="WindowFadeInAnimation"
                                     Storyboard.TargetProperty="(Window.Opacity)"
                                     From="0.0" To="1.0" Duration="0:0:1"
                                     AutoReverse="False" RepeatBehavior="1x" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="Window.Unloaded">
            <BeginStoryboard>
                <Storyboard Name="WindowFadeOut" Completed="WindowFadeOut_Completed">
                    <DoubleAnimation Name="WindowFadeOutAnimation"
                                     Storyboard.TargetName="window"
                                     Storyboard.TargetProperty="(Window.Opacity)"
                                     From="1.0" To="0" Duration="0:0:1"
                                     AutoReverse="False" RepeatBehavior="1x" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100*" MinWidth="350"/>
            <ColumnDefinition Width="50*"  MinWidth="250" MaxWidth="250"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.ColumnSpan="1" Grid.Column="0">

            <Border CornerRadius="10" RenderTransformOrigin="0.495,0.636" BorderThickness="1" BorderBrush="Aqua">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FF8E52F7"/>
                        <GradientStop Color="#FF7C3763" Offset="0.799"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>

            <StackPanel VerticalAlignment="Top" Margin="10,10,0,0" Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock Name="TextBlock1" Text="Products management"
                           TextWrapping="Wrap"
                           FontWeight="Medium"
                           FontFamily="helvetica"
                           FontSize="22"
                           Foreground="White"
                           HorizontalAlignment="Center"
                           />
            </StackPanel>

            <StackPanel x:Name="stackPanel0" VerticalAlignment="Top" Margin="0,45,0,0" Height="28" Orientation="Horizontal">

                <DataGrid Name="dataGrid0" Background="AliceBlue" FontSize="14" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" BorderThickness="2" Margin="10,0,0,0" HorizontalScrollBarVisibility="Hidden"
                  AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False"
                  CellEditEnding="dataGrid0_CellEditEnding"
                  PreviewKeyDown="dataGrid0_PreviewKeyDown"
                  HeadersVisibility="Row"
                  SelectionUnit="Cell"
                  SelectionMode="Single"
                  >

                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="Foreground" Value="Navy"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <!--<Setter Property="Background" Value="AliceBlue"/>-->

                            <Setter Property="Padding" Value="5,1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="DataGridCell">
                                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="CornflowerBlue"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                           Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFF1F3FF" Offset="0.5"/>
                                                <GradientStop Color="#FFD4DDE8" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <!--<Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                    <Setter Property="Foreground" Value="Navy"/>
                                </Trigger>-->
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Id" Binding="{Binding Id}" MinWidth="40" />
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                        <DataGridTextColumn Header="Unit price" Binding="{Binding UnitPrice}" />
                    </DataGrid.Columns>

                </DataGrid>
            </StackPanel>

            <StackPanel x:Name="stackPanel1" VerticalAlignment="Top" Margin="0,45,0,0" Height="442" Orientation="Horizontal">
                
                <DataGrid Name="dataGrid1" Background="AliceBlue" FontSize="14" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" BorderThickness="2" Margin="10,0,0,0" HorizontalScrollBarVisibility="Visible" IsReadOnly="True"
                  AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False"
                  SelectedCellsChanged="dataGrid1_SelectedCellsChanged"
                  CellEditEnding="dataGrid1_CellEditEnding"
                  BeginningEdit="dataGrid1_BeginningEdit" 
                  PreviewKeyDown="dataGrid1_PreviewKeyDown"
                  >

                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="Foreground" Value="Navy"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <!--<Setter Property="Background" Value="AliceBlue"/>-->

                            <Setter Property="Padding" Value="5,1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="DataGridCell">
                                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="CornflowerBlue"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                           Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFF1F3FF" Offset="0.5"/>
                                                <GradientStop Color="#FFD4DDE8" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <!--<Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="LightSteelBlue"/>
                                    <Setter Property="Foreground" Value="Navy"/>
                                </Trigger>-->
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.Columns >
                        <DataGridTextColumn Header="Id" Binding="{Binding Id}" IsReadOnly="True" MinWidth="40" />
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="350" MinWidth="200" />
                        <DataGridTextColumn Header="Unit price" Binding="{Binding UnitPrice}" MinWidth="100" />
                    </DataGrid.Columns>
                </DataGrid>

            </StackPanel>
        </Grid>

        <Grid Grid.ColumnSpan="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="100*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>


            <Border CornerRadius="10" Grid.RowSpan="2" Margin="0,0,0.4,-0.4" BorderThickness="1" BorderBrush="Aqua">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="#FF8E52F7"/>
                        <GradientStop Color="#FF7C3763" Offset="0.799"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>


            <StackPanel Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,10,0,0" Width="247">
                <!--<Image Name="Image_Login" Source="/Resources/Images/login.gif" Width="160"/>-->
                <localComponents:GifImage x:Name="gifImage" IsAutoStart="True" GifSource="/FrontendWPF;component/Resources/Images/success.gif" Width="80" Opacity="0"/>

                <TextBlock Name="TextBlock_message" Text="Select an option."
                           Margin="0, 10, 0,0"
                           TextWrapping="Wrap"
                           FontWeight="Medium"
                           FontFamily="helvetica"
                           FontSize="20"
                           Foreground="White"
                           HorizontalAlignment="Center"/>
            </StackPanel>



            <StackPanel Grid.Row="0" Margin="0,0,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Center" >


                <StackPanel Orientation="Vertical" Margin="0,50,0,0">
                    <Button Name="Button_AddProduct" Click="Button_AddProduct_Click" Width="125" Height="40" Margin="0,10,0,0" Content="Add product" FontWeight="Normal" ToolTipService.ShowOnDisabled="True"/>
                    <Button Name="Button_UpdateProduct" Click="Button_UpdateProduct_Click"  Width="125" Height="40" Margin="0,10,0,0" Content="Update product" FontWeight="Normal" ToolTipService.ShowOnDisabled="True"/>
                    <Button Name="Button_DeleteProduct" Click="Button_DeleteProduct_Click"  Width="125" Height="40" Margin="0,10,0,0" Content="Delete product" FontWeight="Normal" ToolTipService.ShowOnDisabled="True"/>
                    <Button Name="Button_Filter" Click="Button_Filter_Click" Width="125" Height="40" Margin="0,10,0,0" Content="Filter" FontWeight="Normal" ToolTipService.ShowOnDisabled="True"/>
                    <Button Name="Button_ReloadData" Click="Button_ReloadData_Click"  Width="125" Height="40" Margin="0,10,0,0" Content="Reset" FontWeight="Normal" ToolTipService.ShowOnDisabled="True"/>
                    <Button Name="Button_Close" Click="Button_Close_Click"  Width="125" Height="40" Margin="0,10,0,10" Content="Close" FontWeight="Normal" ToolTipService.ShowOnDisabled="True"/>
                </StackPanel>

                <StackPanel/>
                <!--<Border Width="250"
                        Height="2"
                        Background="White"
                        Opacity="0.5"/>-->

                <CheckBox Name="checkBox_fadeInOut" Content="Img Fade in-out" Visibility="Collapsed"
                IsChecked="False" Margin="5">
                    <CheckBox.Triggers>
                        <EventTrigger RoutedEvent="CheckBox.Checked">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--<DoubleAnimation Storyboard.TargetName="imgOff" 
                                         Storyboard.TargetProperty="Opacity"
                                         To="0" Duration="0:00:00.2" />-->
                                        <DoubleAnimation Storyboard.TargetName="gifImage" 
                                         Storyboard.TargetProperty="Opacity"
                                         To="1" Duration="0:00:3" AutoReverse="True"
                                         FillBehavior="Stop" />
                                        <DoubleAnimation Storyboard.TargetName="TextBlock_message" 
                                         Storyboard.TargetProperty="Opacity"
                                         To="0" Duration="0:00:5" BeginTime="0:0:5"
                                         FillBehavior="Stop"
                                         Completed="MessageFadeOut_Completed" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="CheckBox.Unchecked">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--<DoubleAnimation Storyboard.TargetName="imgOff" 
                                         Storyboard.TargetProperty="Opacity"
                                         To="1" Duration="0:00:00.2" />
                                        <DoubleAnimation Storyboard.TargetName="imgOn" 
                                         Storyboard.TargetProperty="Opacity"
                                         To="0" Duration="0:00:00.2" />-->
                                        <!--<DoubleAnimation Storyboard.TargetName="TextBlock_message" 
                                         Storyboard.TargetProperty="Opacity"
                                         To="1" Duration="0:00:0" BeginTime="0:0:0"
                                         FillBehavior="HoldEnd" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </CheckBox.Triggers>
                </CheckBox>
                <!--<TextBlock Name="passwordMask" Text="**********" Visibility="Collapsed" />-->

                <StackPanel Orientation="Horizontal" Margin="0,00,0,0"/>

            </StackPanel>






        </Grid>

    </Grid>
</Window>
