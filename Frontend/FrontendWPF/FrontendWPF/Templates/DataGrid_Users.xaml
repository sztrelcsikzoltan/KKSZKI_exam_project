<Window x:Class="FrontendWPF.Templates.DataGrid_Users"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FrontendWPF"
        xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
            DataContext="{Binding RelativeSource={RelativeSource Self}}"  
        Title="DataGrid Users" Height="450" Width="850">



    <!--TODO: Step 1: In this simple data binding example we will 
    add and remove number from an observable collection, which are
    almost like lists, but they have some extra features, such as
    being able to notify when a value is added to the collection,
    hense the term observable-->
    <Grid>
        <!--TODO: Step 2: Add main grid with stack panel-->
        <StackPanel Name="stackpanel"  Margin="10" Orientation="Horizontal">
            <!--TODO: Step 3: Add list box and which will have it's
            item source binded to the attribute defined in
            MainWindow.xaml.cs so for this step leave out
            ItemsSource="{Binding AvailableNumbers}" 
            -->

            <DataGrid Name="dataGrid1" Background="AliceBlue" IsReadOnly="False" AutoGenerateColumns="False"  LoadingRow="dataGrid1_LoadingRow" Loaded="dataGrid1_Loaded" FontSize="14" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" BorderThickness="2">



                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="Foreground" Value="Navy"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <!--<Setter Property="Background" Value="AliceBlue"/>-->

                        <Setter Property="Padding" Value="5,1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <!--<Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="LightSteelBlue"/>
                                <Setter Property="Foreground" Value="Navy"/>
                            </Trigger>-->
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"
                           Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFF1F3FF" Offset="0.5"/>
                                            <GradientStop Color="#FFD4DDE8" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="LightSteelBlue"/>
                                <Setter Property="Foreground" Value="Navy"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns >
                    <DataGridTextColumn Header="Id" Binding="{Binding Id}" IsReadOnly="True" MinWidth="40"/>
                    <DataGridTextColumn Header="Username" Binding="{Binding Username}" IsReadOnly="False" />
                    <DataGridTextColumn Header="Password" Binding="{Binding Password}" IsReadOnly="False" />
                </DataGrid.Columns>



            </DataGrid>




            <!--TODO: Step 4: Add stack panel containing add and removed
            buttons-->
            <StackPanel Grid.Row="5" Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Right" Margin="0,0,20,10">
                <Button MinWidth="75" Margin="10,0,0,0" Click="AddNumber">Add</Button>
                <Button MinWidth="75" Margin="10,0,0,0" Click="DeleteNumber">Delete</Button>
            </StackPanel>

        </StackPanel>
    </Grid>
</Window>
