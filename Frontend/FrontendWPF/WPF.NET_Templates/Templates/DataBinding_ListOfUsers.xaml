<Window x:Class="WPF.NET_Templates.Templates.DataBinding_ListOfUsers"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF.NET_Templates.Templates"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="DataBinding List of users" Height="450" Width="800">
    <!--TODO: Step 7: Add the window resources this is where the 
    ObjectDataProvider is defined. Like in previous example
    We could also define this in the
    Grid.Resources section, the only difference then is that only the
    child elements of the grid would be able to access it. This way the
    entrie window can access it
    -->
    <Window.Resources>
        <!--TODO: Step 8: Add the ObjectDataProviders
        Essentially as explained in the earlier versions this is 
        equivalent to a function call
        -->
        <ObjectDataProvider x:Key="odpUsers"
                            ObjectType="{x:Type local:Users}"
                            MethodName="GetUsers">
        </ObjectDataProvider>
    </Window.Resources>
    <!--TODO: Step 9: Write main grid with row def-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <!--TODO: Step 10: Add label describing grid element-->
        <Label Grid.Row="0"
               Content="User list"
               FontSize="24"
        />
        <!--TODO: Step 11: Add list box where the elements will be 
        dislayed and bind it to the recpective class-->
        <ListBox 
                 Grid.Row="1"
                 FontSize="24"
                 ItemsSource="{Binding Source={StaticResource odpUsers}}"
        >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <!--TODO: Step 12: Bind to class
                        Here the compiler is smart emough to know that
                        Owner and Type are properties of Car
                        It will not thow an exception however if the 
                        property doens't exist. For example is you have
                        Binding Brand it wil compile and run without 
                        errors, the data will simply just not show up
                        -->
                        <!--<TextBlock Text="{Binding Owner}" />-->
                        <TextBlock Text="{Binding Username}" />
                        <!--<TextBlock Text="{Binding Type}"  />-->
                        <TextBlock Text="{Binding Id}"  />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>   
</Window>
