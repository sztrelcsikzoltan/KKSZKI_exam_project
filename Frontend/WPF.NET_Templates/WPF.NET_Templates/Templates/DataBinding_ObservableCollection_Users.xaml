<Window x:Class="WPF.NET_Templates.Templates.DataBinding_ObservableCollection_Users"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF.NET_Templates.Templates" xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
            DataContext="{Binding RelativeSource={RelativeSource Self}}"  
        Title="DataBinding ObservableCollection Users" Height="450" Width="800">



    <!--TODO: Step 1: In this simple data binding example we will 
    add and remove number from an observable collection, which are
    almost like lists, but they have some extra features, such as
    being able to notify when a value is added to the collection,
    hense the term observable-->
    <Grid>
        <!--TODO: Step 2: Add main grid with stack panel-->
        <StackPanel Margin="10" Orientation="Horizontal">
            <!--TODO: Step 3: Add list box and which will have it's
            item source binded to the attribute defined in
            MainWindow.xaml.cs so for this step leave out
            ItemsSource="{Binding AvailableNumbers}" 
            -->
            <ListBox 
                ItemsSource="{Binding AvailableNumbers}" 
                Margin="4,0,1,10" 
                Height="325"
                Width="300"
                HorizontalAlignment="Left"
                Background="AliceBlue"
            >
                <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <!--TODO: Step 12: Bind to class
                        Here the compiler is smart emough to know that
                        Owner and Type are properties of Car
                        It will not thow an exception however if the 
                        property doens't exist. For example is you have
                        Binding Brand it wil compile and run without 
                        errors, the data will simply just not show up
                        -->
                        <TextBlock Text="{Binding Source=Username}" />
                        <TextBlock Text="{Binding Password}"  />
                        <TextBlock Text="{Binding  Path=Id}"  />
                    </StackPanel>
                </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <ListView Name="listview" ItemsSource="{Binding AvailableNumbers}" Width="300" Background="AliceBlue" Loaded="listview_Loaded" SelectionChanged="listview_SelectionChanged">
                <ListView.View>
                    <GridView x:Name="gridview">
                        <GridViewColumn Header="Id"
                      DisplayMemberBinding="{Binding  Id}"/>
                        <GridViewColumn Header="Username" 
                      DisplayMemberBinding="{Binding Username}" />
                        <GridViewColumn Header="Password"
                      DisplayMemberBinding="{Binding Password}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <!--TODO: Step 4: Add stack panel containing add and removed
            buttons-->
            <StackPanel Grid.Row="5" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,20,10">
                <Button MinWidth="75" Margin="10,0,0,0" Click="AddNumber">Add</Button>
                <Button MinWidth="75" Margin="10,0,0,0" Click="DeleteNumber">Delete</Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
